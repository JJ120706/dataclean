def cleanphone(number):
    original_number=number
    ti = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    dic='^1(3[0-9]|4[579]|5[0-35-9]|66|7[1-35-8]|8[0-9]|9[8-9])[0-9]{8}$|^(0750)?(-[235678]\d{6})$'
    dic1 = '^1(3[0-9]|4[579]|5[0-35-9]|66|7[1-35-8]|8[0-9]|9[8-9])[0-9]{8}$|^(0750)?(-?[235678]\d{6})$'
    if number is None: # 内容为空
        dict={'code':'1','updata_time':ti} # 1代表缺失
        Json=json.dumps(dict)
        # cursor3.execute("insert into grjcxx_mobile(json) values ('{json}')" .format(json=db3.escape_string(Json)))
        print('内容为空')
    else: # 内容不为空
        if re.match(dic1, number): # 内容完全正确，仅限单个号码
            print('只有一个手机号码且正确',number)
        else:
            number=deleteTab(number)
            if re.match(dic1,number): # 删除空格后可以匹配到单个号码
                dict = {'code': '1', 'update_time': ti, 'before': original_number,'after':number}  # 1代表格式错误
                Json = json.dumps(dict)
                # cursor3.execute("update grjcxx_mobile set json='{json}' where mobileno='{number}'".format(json=db3.escape_string(Json),number=original_number))
                print('删除空格后正确',number)
            elif number in ['','0']: # 意义上的空值
                dict={'code':'2','update_time':ti,'before':original_number} # 2代表意义上的空值,统一改为'null'
                Json=json.dumps(dict)
                # cursor3.execute("update grjcxx_mobile set json='{json}' where mobileno='{number}'".format(json=db3.escape_string(Json),number=original_number))
                print('意义上的空值',number)

            else: # 多个字符串或者含有非法字符的字符串处理
                number = list(number)
                for i in range(len(number)):
                    if number[i].isdigit() or number[i] == '-':
                        pass
                    else:
                        number[i] = '/' # 将所有的非法字符变成‘/’
                number = ''.join(number).split('/') # 以‘/’为分隔符分割字符串
                r = 0 # 使每次检查都从列表开头检查
                while (r < len(number)):  # 使用while删除空元素['','']
                    if number[r] == '':
                        number.pop(r)
                        r -= 1
                    elif number[r]=='0750':
                        if re.match(r'^[235678][0-9]{6}$',number[r+1]):
                            number[r+1]=number[r]+'-'+number[r+1]
                            number.pop(r)
                            r-=1
                    else:
                        pass
                    r += 1
                for q in range(len(number)):
                    if re.match(dic,number[q]):
                        print('匹配成功[%s]' %number[q],end='@')
                    else:
                        print('逻辑错误[%s]' %number[q],end='@')
                print()
